#language: nl-NL
Functionaliteit: In de webshop kunnen allerlei artikelen besteld worden door relaties.
Dit doet een relatie dan voor een bepaalde afdeling (department).
Er kan een keer per dag besteld worden.
Als er een tweede keer een bestelling wordt geplaatst dan wordt de bestaande order terug gegeven.
Het is wel mogelijk om een bestaande bestelling te wijzigen.

#	Rule:
#	Zo eenvoudig mogelijk een nieuwe order aanmaken.
#
#	Vragen:
#		- Wie is relatie 82?
#       - Wat is afdeling (department) 3624
#       - Zijn er nog aanvullende regels of voorbeelden die we moeten testen?
#
#   Noot: aflevermethode 2 is nog niet geimplementeerd.

Scenario: Webshop Maak een nieuwe order aan
Stel er is een sessie met de FleuraMetz backend
En er zijn geen bestaande orders in het systeem voor die klant op die dag
Als relatie 82 een nieuwe order inschiet met een order datum in de toekomst
En de afdeling die besteld is 3624
Dan zal deze nieuwe order  verwerkt moeten zijn in de backend
En zal het nieuwe order nummer opgeslagen worden voor het ophalen van de beschikbaarheid


#	Rule:
#	Call API voor Availability after placing the order.
#
#	Vragen:
#       - Hoe voorspellen we dat er de juiste waarden worden weergegeven?
Scenario: Webshop Roep de beschikbaarheid op van het zojuist bestelde product
Stel de beschikbaarheid moet worden geraadpleegd
Als relatie 82a zijn aangemaakte order aanroept via de service
Dan zal de beschikbaarheid weergegeven moeten worden met de onderdelen aantal en prijs voor relatie 82




# nog wat gevonden rules:
# @BloemenOk = 1 then 1 when @PlantenOk = 1 then 2 when @DiversenOk = 1





#	Noot: voorbeeld scenario voor een abstract scenario
Abstract Scenario: Dit is een test om te zien of scenario outline werkt
Stel er is een sessie met de FleuraMetz backend
Als relatie <Relatie> een nieuwe order inschiet met een order datum in de toekomst
Dan zal deze nieuwe order <Verwerken> verwerkt moeten zijn in de backend
Voorbeelden:
| Relatie | Verwerken  |
| 82      | Wel        |
| 9999999 | Niet       |
